name: linux

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  schedule:
    - cron: '0 12 * * 4'

jobs:
  build:
    runs-on: ubuntu-latest
    steps:

    - name: Checkout
      uses: actions/checkout@v2
    
    - name: Setup
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: 6.0.x
 
    - name: Build
      run: dotnet build -c Release
    
    - name: Test
      run: dotnet test --no-build --verbosity normal --collect:"XPlat Code Coverage" -c Release
      
    - name: Codecov
      uses: codecov/codecov-action@v3.1.0
      with:
        fail_ci_if_error: true
        verbose: true

  analyze:
    name: Analyze
    runs-on: ubuntu-latest
    permissions:
      actions: read
      contents: read
      security-events: write

    strategy:
      fail-fast: false
      matrix:
        language: [ 'csharp' ]

    steps:
    - name: Checkout repository
      uses: actions/checkout@v3

    # Initializes the CodeQL tools for scanning.
    - name: Initialize CodeQL
      uses: github/codeql-action/init@v2
      with:
        languages: ${{ matrix.language }}
      
    - name: Autobuild
      uses: github/codeql-action/autobuild@v2

    - name: Perform CodeQL Analysis
      uses: github/codeql-action/analyze@v2

  publish:
    name: Publish
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2

    - name: Setup .NET
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: 6.0.x

    - name: Restore dependencies
      run: dotnet restore

    - name: Build
      run: dotnet build --no-restore

    - name: Test
      run: dotnet test --no-build --verbosity normal

    - name: Publish
      run: dotnet pack RDFSharp/RDFSharp.csproj --output nuget --configuration RELEASE
      
    - name: Upload a Build Artifact
      uses: actions/upload-artifact@v2.2.2
      with:
        name: nuget-package
        path: nuget
        if-no-files-found: error